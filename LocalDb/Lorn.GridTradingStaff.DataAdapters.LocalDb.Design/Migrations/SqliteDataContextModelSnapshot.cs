// <auto-generated />
using System;
using Lorn.GridTradingStaff.DataAdapters.LocalDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lorn.GridTradingStaff.DataAdapters.LocalDb.Migrations
{
    [DbContext(typeof(SqliteDataContext))]
    partial class SqliteDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("Lorn.GridTradingStaff.DataModels.SecurityProviderInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Provider")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SecurityId")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SecurityProviderInfos");
                });

            modelBuilder.Entity("Security.DataModels.ChinaStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Area")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Exchange")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Industry")
                        .HasColumnType("TEXT");

                    b.Property<int>("Is_hs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ListStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Listdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Market")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("SecurityType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TradingMethod")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ChinaStocks");
                });

            modelBuilder.Entity("Security.DataModels.TradeCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CalendarDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Exchange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TradeCalendars");
                });
#pragma warning restore 612, 618
        }
    }
}
